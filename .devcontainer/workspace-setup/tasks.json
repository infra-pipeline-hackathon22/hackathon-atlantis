{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Create venv Interpreter",
            "type": "shell",
            "command": "cd ${fileDirname}; python3 -m venv .venv; source .venv/bin/activate; python -m pip install --upgrade pip; python -m pip install -r requirements.txt"
        },
        {
            "label": "Terraform Format (terraform fmt)",
            "type": "shell",
            "command": "cd ${fileDirname}; terraform fmt"
        },
        {
            "label": "tflint on Current Module Directory",
            "type": "shell",
            "command": "cd ${fileDirname}; tflint --config ${env:REPO_HOME}/.tflint.hcl --module"
        },
        {
            "label": "tflint init",
            "type": "shell",
            "command": "tflint --init ${env:REPO_HOME}"
        },
        {
            "label": "tfsec (with vars)",
            "type": "shell",
            "command": "tfsec --tfvars-file ${input:varsFile} ${fileDirname}"
        },
        {
            "label": "tfsec",
            "type": "shell",
            "command": "tfsec ${fileDirname}"
        },
        {
            "label": "Terraform Docs",
            "type": "shell",
            "command": "terraform-docs markdown ${fileDirname} > \"${fileDirname}/${input:docsOutput}\""
        },
        {
            "label": "Terraform Docs (Recursive)",
            "type": "shell",
            "command": "terraform-docs markdown ${fileDirname} --output-file \"${input:docsOutput}\" --recursive"
        },
        {
            "label": "Terraform Format",
            "type": "shell",
            "command": "cd ${fileDirname}; terraform fmt"
        },
        {
            "type": "docker-build",
            "label": "docker-build",
            "platform": "python",
            "dockerBuild": {
                "tag": "containerbuild:latest",
                "dockerfile": "${workspaceFolder}/demo/python/cosign-provider/Dockerfile",
                "context": "${workspaceFolder}/demo/python/cosign-provider",
                "pull": true
            }
        },
        {
            "type": "docker-run",
            "label": "docker-run: debug",
            "dependsOn": [
                "docker-build"
            ],
            "dockerRun": {
                "env": {
                    "FLASK_APP": "demo/python/cosign-provider/app.py"
                }
            },
            "python": {
                "args": [
                    "run",
                    "--no-debugger",
                    "--no-reload",
                    "--host",
                    "0.0.0.0",
                    "--port",
                    "8090"
                ],
                "module": "flask"
            }
        }
    ],
    "inputs": [
        {
            "id": "varsFile",
            "type": "promptString",
            "description": "Name of the tfsec vars file relative to the current file's directory",
            "default": "prod.auto.tfvars"
        },
        {
            "id": "docsOutput",
            "type": "promptString",
            "description": "Name of the file that will be created (relative to the current file) to hold generated documentation.  Leave as default (${fileBasename}) to output to current file",
            "default": "${fileBasename}"
        },
    ]
}
